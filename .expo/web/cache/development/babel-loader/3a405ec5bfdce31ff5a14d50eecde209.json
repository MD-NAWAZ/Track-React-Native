{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Tracker\\\\track-react\\\\src\\\\screens\\\\TrackCreateScreen.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"react-native-elements\";\nimport { SafeAreaView } from \"react-navigation\";\nimport Map from \"../Components/Map\";\nimport { requestPermissionsAsync, watchPositionAsync, Accuracy } from \"expo-location\";\nimport _mockLocation from \"../_mockLocation\";\nimport { Context as LocationContext } from \"../context/LocationContext\";\n\nvar TrackCreateScreen = function TrackCreateScreen() {\n  var _useContext = useContext(LocationContext),\n      state = _useContext.state,\n      addLocation = _useContext.addLocation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      err = _useState2[0],\n      setErr = _useState2[1];\n\n  var startWatching = function startWatching() {\n    var _await$requestPermiss, granted;\n\n    return _regeneratorRuntime.async(function startWatching$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(requestPermissionsAsync());\n\n          case 3:\n            _await$requestPermiss = _context.sent;\n            granted = _await$requestPermiss.granted;\n\n            if (granted) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error(\"Location permission not granted\");\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(watchPositionAsync({\n              accuracy: Accuracy.BestForNavigation,\n              timeInterval: 1000,\n              distanceInterval: 10\n            }, function (location) {\n              console.log(location);\n            }));\n\n          case 9:\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            setErr(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  useEffect(function () {\n    startWatching();\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    forceInset: {\n      top: \"always\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    h2: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"TrackCreateScreen\"), React.createElement(Map, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), err ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }\n  }, \"Please provide permission\") : null));\n};\n\nTrackCreateScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    header: null\n  };\n};\n\nvar styles = StyleSheet.create({});\nexport default TrackCreateScreen;","map":{"version":3,"sources":["C:/Tracker/track-react/src/screens/TrackCreateScreen.js"],"names":["React","useState","useEffect","useContext","Text","SafeAreaView","Map","requestPermissionsAsync","watchPositionAsync","Accuracy","_mockLocation","Context","LocationContext","TrackCreateScreen","state","addLocation","err","setErr","startWatching","granted","Error","accuracy","BestForNavigation","timeInterval","distanceInterval","location","console","log","top","navigationOptions","navigation","header","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,UAAjC,QAAkD,OAAlD;;;AAEA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,OAAOC,GAAP;AACA,SAAQC,uBAAR,EAAgCC,kBAAhC,EAAmDC,QAAnD,QAAkE,eAAlE;AACA,OAAOC,aAAP;AACA,SAAQC,OAAO,IAAIC,eAAnB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA,oBACAV,UAAU,CAACS,eAAD,CADV;AAAA,MACrBE,KADqB,eACrBA,KADqB;AAAA,MACfC,WADe,eACfA,WADe;;AAAA,kBAENd,QAAQ,CAAC,IAAD,CAFF;AAAA;AAAA,MAErBe,GAFqB;AAAA,MAEhBC,MAFgB;;AAG5B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESX,uBAAuB,EAFhC;;AAAA;AAAA;AAERY,YAAAA,OAFQ,yBAERA,OAFQ;;AAAA,gBAGXA,OAHW;AAAA;AAAA;AAAA;;AAAA,kBAIL,IAAIC,KAAJ,CAAU,iCAAV,CAJK;;AAAA;AAAA;AAAA,6CAMTZ,kBAAkB,CAAC;AACrBa,cAAAA,QAAQ,EAACZ,QAAQ,CAACa,iBADG;AAErBC,cAAAA,YAAY,EAAC,IAFQ;AAGrBC,cAAAA,gBAAgB,EAAC;AAHI,aAAD,EAIrB,UAACC,QAAD,EAAY;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,aANsB,CANT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAedR,YAAAA,MAAM,aAAN;;AAfc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAmBAf,EAAAA,SAAS,CAAC,YAAI;AACVgB,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAGA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAE;AAACU,MAAAA,GAAG,EAAC;AAAL,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAM,IAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADI,EAEJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,EAGHZ,GAAG,GAAC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAD,GAA0C,IAH1C,CADJ,CADJ;AASH,CAlCD;;AAoCAH,iBAAiB,CAACgB,iBAAlB,GAAsC,gBAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACpD,SAAO;AACHC,IAAAA,MAAM,EAAG;AADN,GAAP;AAGH,CAJD;;AAKA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CACX,EADW,CAAf;AAMA,eAAerB,iBAAf","sourcesContent":["import React,{useState,useEffect,useContext} from \"react\";\r\nimport {View,StyleSheet} from \"react-native\";\r\nimport {Text} from \"react-native-elements\";\r\nimport {SafeAreaView} from \"react-navigation\";\r\nimport Map from \"../Components/Map\";\r\nimport {requestPermissionsAsync,watchPositionAsync,Accuracy} from \"expo-location\";\r\nimport _mockLocation from \"../_mockLocation\";\r\nimport {Context as LocationContext} from \"../context/LocationContext\";\r\n\r\nconst TrackCreateScreen = () => {\r\n    const {state,addLocation} = useContext(LocationContext);\r\n    const [err, setErr] = useState(null);\r\n    const startWatching = async () => {\r\n        try{\r\n           const {granted} = await requestPermissionsAsync();\r\n           if(!granted){\r\n               throw new Error(\"Location permission not granted\");\r\n           }\r\n           await watchPositionAsync({\r\n               accuracy:Accuracy.BestForNavigation,\r\n               timeInterval:1000,\r\n               distanceInterval:10,\r\n            },(location)=>{\r\n                console.log(location);\r\n            })\r\n        }\r\n        catch(e){\r\n            setErr(e);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        startWatching();\r\n    },[])\r\n    return (\r\n        <View>\r\n            <SafeAreaView forceInset={{top:\"always\"}}>\r\n        <Text h2>TrackCreateScreen</Text>\r\n        <Map/>\r\n        {err?<Text>Please provide permission</Text> : null}\r\n        </SafeAreaView>\r\n        </View>\r\n    )\r\n};\r\n\r\nTrackCreateScreen.navigationOptions = ({navigation}) => {\r\n    return {\r\n        header : null\r\n    }\r\n}\r\nconst styles = StyleSheet.create(\r\n    {\r\n\r\n    }\r\n);\r\n\r\nexport default TrackCreateScreen;"]},"metadata":{},"sourceType":"module"}