{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Tracker\\\\track-react\\\\src\\\\Components\\\\Map.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Text } from \"react-native-elements\";\nimport MapView, { Polyline, Circle } from \"react-native-maps\";\nimport { Context as LocationContext } from \"../context/LocationContext\";\n\nvar Map = function Map() {\n  var _useContext = useContext(LocationContext),\n      currentLocation = _useContext.state.currentLocation;\n\n  if (!currentLocation) {\n    return React.createElement(ActivityIndicator, {\n      size: \"large\",\n      style: {\n        marginTop: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: _objectSpread(_objectSpread({}, currentLocation.coords), {}, {\n      latitudeDelta: 0.01,\n      longitudeDelta: 0.02\n    }),\n    showsMyLocationButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, React.createElement(Circle, {\n    center: currentLocation.coords,\n    radius: 75,\n    strokeColor: \"rgba(158,158,255, 1.0)\",\n    fillColor: \"rgba(158,158,255,0.3)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  map: {\n    height: 300\n  }\n});\nexport default Map;","map":{"version":3,"sources":["C:/Tracker/track-react/src/Components/Map.js"],"names":["React","useContext","Text","MapView","Polyline","Circle","Context","LocationContext","Map","currentLocation","state","marginTop","styles","map","coords","latitudeDelta","longitudeDelta","StyleSheet","create","height"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;;;;AAEA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,OAAOC,OAAP,IAAgBC,QAAhB,EAAyBC,MAAzB,QAAsC,mBAAtC;AACA,SAAQC,OAAO,IAAIC,eAAnB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,oBACoBP,UAAU,CAACM,eAAD,CAD9B;AAAA,MACAE,eADA,eACPC,KADO,CACAD,eADA;;AAGd,MAAG,CAACA,eAAJ,EAAoB;AAChB,WACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAC;AAAX,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AACD,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEC,MAAM,CAACC,GAAvB;AACA,IAAA,aAAa,kCACNJ,eAAe,CAACK,MADV;AAETC,MAAAA,aAAa,EAAC,IAFL;AAGTC,MAAAA,cAAc,EAAC;AAHN,MADb;AAMA,IAAA,qBAAqB,EAAE,IANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,MAAD;AACA,IAAA,MAAM,EAAEP,eAAe,CAACK,MADxB;AAEA,IAAA,MAAM,EAAE,EAFR;AAGA,IAAA,WAAW,EAAC,wBAHZ;AAIA,IAAA,SAAS,EAAC,uBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,CADJ;AAmBH,CA3BD;;AA6BA,IAAMF,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC5BL,EAAAA,GAAG,EAAC;AACAM,IAAAA,MAAM,EAAC;AADP;AADwB,CAAlB,CAAf;AAMA,eAAeX,GAAf","sourcesContent":["import React,{useContext} from \"react\";\r\nimport {View,StyleSheet, ActivityIndicator} from \"react-native\";\r\nimport {Text} from \"react-native-elements\";\r\nimport MapView,{Polyline,Circle} from \"react-native-maps\";\r\nimport {Context as LocationContext} from \"../context/LocationContext\";\r\n\r\nconst Map = () => {\r\n    const {state:{currentLocation}} = useContext(LocationContext);\r\n\r\n    if(!currentLocation){\r\n        return(\r\n            <ActivityIndicator size=\"large\" style={{marginTop:200}}/>\r\n        )\r\n    }\r\n    return (\r\n        <View>\r\n            <MapView style={styles.map}\r\n            initialRegion={{\r\n                ...currentLocation.coords,\r\n                latitudeDelta:0.01,\r\n                longitudeDelta:0.02\r\n            }}\r\n            showsMyLocationButton={true}\r\n            >\r\n                <Circle\r\n                center={currentLocation.coords}\r\n                radius={75}\r\n                strokeColor=\"rgba(158,158,255, 1.0)\"\r\n                fillColor=\"rgba(158,158,255,0.3)\"\r\n                />\r\n            </MapView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n     map:{\r\n         height:300\r\n     }\r\n})\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}