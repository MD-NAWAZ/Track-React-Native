{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { requestPermissionsAsync, watchPositionAsync, Accuracy } from \"expo-location\";\nexport default (function (shouldTrack, callback) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      err = _useState2[0],\n      setErr = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subscriber = _useState4[0],\n      setSubscriber = _useState4[1];\n\n  var startWatching = function startWatching() {\n    var _await$requestPermiss, granted, sub;\n\n    return _regeneratorRuntime.async(function startWatching$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(requestPermissionsAsync());\n\n          case 3:\n            _await$requestPermiss = _context.sent;\n            granted = _await$requestPermiss.granted;\n\n            if (granted) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error(\"Location permission not granted\");\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(watchPositionAsync({\n              accuracy: Accuracy.BestForNavigation,\n              timeInterval: 1000,\n              distanceInterval: 10\n            }, callback));\n\n          case 9:\n            sub = _context.sent;\n            setSubscriber(sub);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            setErr(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  useEffect(function () {\n    if (shouldTrack) {\n      startWatching();\n    } else {\n      subscriber.remove();\n      setSubscriber(null);\n    }\n  }, [shouldTrack]);\n  return [err];\n});","map":{"version":3,"sources":["C:/Tracker/track-react/src/Hooks/useLocation.js"],"names":["React","useState","useEffect","requestPermissionsAsync","watchPositionAsync","Accuracy","shouldTrack","callback","err","setErr","subscriber","setSubscriber","startWatching","granted","Error","accuracy","BestForNavigation","timeInterval","distanceInterval","sub","remove"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,uBAAR,EAAgCC,kBAAhC,EAAmDC,QAAnD,QAAkE,eAAlE;AAEA,gBAAe,UAACC,WAAD,EAAcC,QAAd,EAA2B;AAAA,kBAChBN,QAAQ,CAAC,IAAD,CADQ;AAAA;AAAA,MAC/BO,GAD+B;AAAA,MAC1BC,MAD0B;;AAAA,mBAEFR,QAAQ,CAAC,IAAD,CAFN;AAAA;AAAA,MAE/BS,UAF+B;AAAA,MAEnBC,aAFmB;;AAGtC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEST,uBAAuB,EAFhC;;AAAA;AAAA;AAERU,YAAAA,OAFQ,yBAERA,OAFQ;;AAAA,gBAGXA,OAHW;AAAA;AAAA;AAAA;;AAAA,kBAIL,IAAIC,KAAJ,CAAU,iCAAV,CAJK;;AAAA;AAAA;AAAA,6CAMGV,kBAAkB,CAAC;AACjCW,cAAAA,QAAQ,EAACV,QAAQ,CAACW,iBADe;AAEjCC,cAAAA,YAAY,EAAC,IAFoB;AAGjCC,cAAAA,gBAAgB,EAAC;AAHgB,aAAD,EAKnCX,QALmC,CANrB;;AAAA;AAMTY,YAAAA,GANS;AAafR,YAAAA,aAAa,CAACQ,GAAD,CAAb;AAbe;AAAA;;AAAA;AAAA;AAAA;AAgBdV,YAAAA,MAAM,aAAN;;AAhBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAoBAP,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGI,WAAH,EAAe;AACXM,MAAAA,aAAa;AAChB,KAFD,MAGI;AACAF,MAAAA,UAAU,CAACU,MAAX;AACAT,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GARQ,EAQP,CAACL,WAAD,CARO,CAAT;AAUA,SAAO,CAACE,GAAD,CAAP;AACH,CAlCD","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport {requestPermissionsAsync,watchPositionAsync,Accuracy} from \"expo-location\";\r\n\r\nexport default (shouldTrack, callback) => {\r\n    const [err, setErr] = useState(null);\r\n    const [subscriber, setSubscriber] = useState(null);\r\n    const startWatching = async () => {\r\n        try{\r\n           const {granted} = await requestPermissionsAsync();\r\n           if(!granted){\r\n               throw new Error(\"Location permission not granted\");\r\n           }\r\n           const sub = await watchPositionAsync({\r\n               accuracy:Accuracy.BestForNavigation,\r\n               timeInterval:1000,\r\n               distanceInterval:10,\r\n            },\r\n            callback\r\n           );\r\n           setSubscriber(sub);\r\n        }\r\n        catch(e){\r\n            setErr(e);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(shouldTrack){\r\n            startWatching();\r\n        }\r\n        else{\r\n            subscriber.remove();\r\n            setSubscriber(null);\r\n        }        \r\n    },[shouldTrack])  \r\n    \r\n    return [err];\r\n};"]},"metadata":{},"sourceType":"module"}