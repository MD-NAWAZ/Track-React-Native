{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Tracker\\\\track-react\\\\src\\\\screens\\\\TrackCreateScreen.js\";\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"react-native-elements\";\nimport { SafeAreaView, withNavigationFocus } from \"react-navigation\";\nimport Map from \"../Components/Map\";\nimport _mockLocation from \"../_mockLocation\";\nimport { Context as LocationContext } from \"../context/LocationContext\";\nimport useLocation from \"../Hooks/useLocation\";\n\nvar TrackCreateScreen = function TrackCreateScreen(_ref) {\n  var isFocused = _ref.isFocused;\n\n  var _useContext = useContext(LocationContext),\n      addLocation = _useContext.addLocation;\n\n  var _useLocation = useLocation(function (location) {\n    addLocation(isFocused, location);\n  }),\n      _useLocation2 = _slicedToArray(_useLocation, 1),\n      err = _useLocation2[0];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    forceInset: {\n      top: \"always\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    h2: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"TrackCreateScreen\"), React.createElement(Map, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), err ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }\n  }, \"Please provide permission\") : null));\n};\n\nTrackCreateScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    header: null\n  };\n};\n\nvar styles = StyleSheet.create({});\nexport default withNavigationFocus(TrackCreateScreen);","map":{"version":3,"sources":["C:/Tracker/track-react/src/screens/TrackCreateScreen.js"],"names":["React","useContext","Text","SafeAreaView","withNavigationFocus","Map","_mockLocation","Context","LocationContext","useLocation","TrackCreateScreen","isFocused","addLocation","location","err","top","navigationOptions","navigation","header","styles","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;;;AAEA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,SAAQC,YAAR,EAAqBC,mBAArB,QAA+C,kBAA/C;AACA,OAAOC,GAAP;AACA,OAAOC,aAAP;AACA,SAAQC,OAAO,IAAIC,eAAnB;AACA,OAAOC,WAAP;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAiB;AAAA,MAAfC,SAAe,QAAfA,SAAe;;AAAA,oBACjBV,UAAU,CAACO,eAAD,CADO;AAAA,MAChCI,WADgC,eAChCA,WADgC;;AAAA,qBAEzBH,WAAW,CAAC,UAACI,QAAD,EAAY;AAACD,IAAAA,WAAW,CAACD,SAAD,EAAWE,QAAX,CAAX;AAAgC,GAA9C,CAFc;AAAA;AAAA,MAEhCC,GAFgC;;AAGvC,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAE;AAACC,MAAAA,GAAG,EAAC;AAAL,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAM,IAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADI,EAEJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,EAGHD,GAAG,GAAC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAD,GAA0C,IAH1C,CADJ,CADJ;AASH,CAZD;;AAcAJ,iBAAiB,CAACM,iBAAlB,GAAsC,iBAAkB;AAAA,MAAhBC,UAAgB,SAAhBA,UAAgB;AACpD,SAAO;AACHC,IAAAA,MAAM,EAAG;AADN,GAAP;AAGH,CAJD;;AAKA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CACX,EADW,CAAf;AAMA,eAAejB,mBAAmB,CAACM,iBAAD,CAAlC","sourcesContent":["import React,{useContext} from \"react\";\r\nimport {View,StyleSheet} from \"react-native\";\r\nimport {Text} from \"react-native-elements\";\r\nimport {SafeAreaView,withNavigationFocus} from \"react-navigation\";\r\nimport Map from \"../Components/Map\";\r\nimport _mockLocation from \"../_mockLocation\";\r\nimport {Context as LocationContext} from \"../context/LocationContext\";\r\nimport useLocation from \"../Hooks/useLocation\";\r\n\r\nconst TrackCreateScreen = ({isFocused}) => {\r\n    const {addLocation} = useContext(LocationContext);\r\n    const [err] = useLocation((location)=>{addLocation(isFocused,location)});\r\n    return (\r\n        <View>\r\n            <SafeAreaView forceInset={{top:\"always\"}}>\r\n        <Text h2>TrackCreateScreen</Text>\r\n        <Map/>\r\n        {err?<Text>Please provide permission</Text> : null}\r\n        </SafeAreaView>\r\n        </View>\r\n    )\r\n};\r\n\r\nTrackCreateScreen.navigationOptions = ({navigation}) => {\r\n    return {\r\n        header : null\r\n    }\r\n}\r\nconst styles = StyleSheet.create(\r\n    {\r\n\r\n    }\r\n);\r\n\r\nexport default withNavigationFocus(TrackCreateScreen);"]},"metadata":{},"sourceType":"module"}